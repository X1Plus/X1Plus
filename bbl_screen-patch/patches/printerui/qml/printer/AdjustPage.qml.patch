--- printer_ui-orig/printerui/qml/printer/AdjustPage.qml
+++ printer_ui/printerui/qml/printer/AdjustPage.qml
@@ -6,6 +6,7 @@
 
 import ".."
 import "qrc:/uibase/qml/widgets"
+import "../X1Plus.js" as X1Plus
 
 Item {
 
@@ -15,8 +16,11 @@
     property bool hasExtruderList: (extruderList != null)
     property var extruders: hasExtruderList ? extruderList.extruders : []
     property var currentExtruder: hasExtruderList ? extruderList.currentExtruder : null
-    property var tmpModelArray: hasExtruderList ? (extruders.map(n=>n.extruderHeater)).concat(tempModel) : [heaters.hotend].concat(tempModel)
-
+    // property var tmpModelArray: hasExtruderList ? (extruders.map(n=>n.extruderHeater)).concat(tempModel) : [heaters.hotend].concat(tempModel)
+    property var tmpModelArray: tempModel
+    property var isHomed: (PrintManager.homedState & PrintManager.AXIS_HOMED_ALL) >= PrintManager.AXIS_HOMED_ALL
+    property bool ignoreDialog: false
+    
     property var speedAdjust: QtObject {
         property string name: "speed"
         property int currentTemp: PrintManager.currentTask.printSpeed
@@ -26,12 +30,44 @@
         property bool visible: true
     }
 
-    property var tempModel: [
-//        heaters.hotend,
+
+    property var sensorsModels: Object.entries(X1Plus.Sensors.status()).map(function ([name, val]) {
+        let s = {
+            "name": "i2c",
+            "text": `unknown sensor type`,
+            "targetTemp": 0,
+            "visible": true,
+            "targetEditable": false,
+            "flavorText": name,
+            "errorMsg": null,
+        };
+        if (val.t_c && val.rh_pct) {
+            s.text = `${val.t_c.toFixed(1)}°C, ${val.rh_pct.toFixed(1)}% RH`
+        } else if (val.pm2_5_ugm3 !== undefined) {
+            s.text = `${val.pm2_5_ugm3} µg/m³ PM2.5`;
+        } else if (val.inop) {
+            s.text = "sensor malfunctioning";
+        }
+        
+        // If it has a default-ish name, then replace the name with just the type.
+        if (name.startsWith("port_") && val.type) {
+            s.flavorText = val.type;
+        }
+        
+        if (val.type == 'tca8418') {
+            // That's a keypad, not a sensor, goofus!
+            s.visible = false;
+        }
+        return s;
+    });
+
+    property var tempModel: ([
+        heaters.hotend,
         heaters.heatbed,
-        heaters.chamber,
-        speedAdjust
-    ].filter(h=>h.visible);
+        heaters.chamber]
+        .concat(sensorsModels)
+        .concat([speedAdjust])
+    ).filter(h=>h.visible);
 
     property var fanModel: [
         PrintManager.fans.cooling,
@@ -153,18 +189,32 @@
                 model: xyAsixModel
                 delegate: axisComp
             }
-
-            ZButton {
+            Rectangle {
                 id: axisHome
                 width: 103
                 height: 103
                 anchors.centerIn: parent
-                type: ZButtonAppearance.Tertiary
-                radius: 44
-                iconSize: 0
-                icon: "../../icon/vector.svg"
-                onClicked: {
-                    axisController.moveCenter(PrintManager.currentTask.stage === PrintTask.PAUSED)
+                radius: width/2
+                color:  "#626260"
+                    ZImage {
+                        id: axisHomeImage
+                        width: 70 
+                        height: 70
+                        anchors.centerIn: parent
+                        fillMode: Image.PreserveAspectFit 
+                        originSource: (isHomed) ? "../../icon/components/home.svg" : "../../icon/vector.svg"
+                        tintColor: (isHomed) ?  Colors.brand : "#eb6600"
+                        Behavior on tintColor {
+                            ColorAnimation { duration: 500 } 
+                        }
+                    }
+                MouseArea {
+                    anchors.fill:parent
+                    onClicked: {
+                        axisController.moveCenter(PrintManager.currentTask.stage === PrintTask.PAUSED)
+                    }
+                    onEntered: axisHome.opacity = 0.8
+                    onExited: axisHome.opacity = 1.0
                 }
             }
         }
@@ -210,7 +260,7 @@
                     }
 
                     onClicked: {
-                        if ((PrintManager.homedState & PrintManager.AXIS_HOMED_ALL) !== PrintManager.AXIS_HOMED_ALL) {
+                        if (!isHomed && !ignoreDialog) {
                             limitFrame()
                         }
                         axisController.moveAxis(modelData.axis, modelData.dir, modelData.unit)
@@ -512,7 +562,7 @@
             textSize: 36
             checked: ListView.isCurrentItem
             icon: "../../icon/heater_" + modelData.name + ".svg"
-            text: modelData.currentTemp.toFixed(0)
+            text: modelData.text || modelData.currentTemp.toFixed(0)
 
             EventTrack.itemName: "tempAndSpeed_" + modelData.name
 
@@ -554,7 +604,7 @@
                 anchors.verticalCenter: parent.verticalCenter
                 font: Fonts.body_28
                 color: Colors.gray_300
-                visible: index < (tmpModelArray.length - 1) || !speedPad.target
+                visible: (index < (tmpModelArray.length - 1) || !speedPad.target) && !modelData.text
                 text: index < (tmpModelArray.length - 1) ? "°C" : "%"
             }
 
@@ -583,6 +633,17 @@
                 }
             }
 
+            Text {
+                id: flavorText
+                anchors.top: degreeLabel.bottom
+                anchors.topMargin: 2
+                x: 76
+                visible: !!modelData.flavorText
+                font: Fonts.body_20
+                color: Colors.brand
+                text: modelData.flavorText || ""
+            }
+
             ZLineSplitter {
                 alignment: Qt.AlignBottom
                 padding: 15
@@ -828,7 +889,7 @@
                 EventTrack.itemName: "bigSector_" + modelData.name
 
                 onClicked: {
-                    if ((PrintManager.homedState & PrintManager.AXIS_HOMED_ALL) != PrintManager.AXIS_HOMED_ALL) {
+                    if (!isHomed && !ignoreDialog) {
                         limitFrame()
                     }
                     axisController.moveAxis(modelData.axis, modelData.dir, AxisController.MM_10)
@@ -846,7 +907,7 @@
                 EventTrack.itemName: "smallSector_" + modelData.name
 
                 onClicked: {
-                    if ((PrintManager.homedState & PrintManager.AXIS_HOMED_ALL) != PrintManager.AXIS_HOMED_ALL) {
+                    if (!isHomed && !ignoreDialog) {
                         limitFrame()
                     }
                     axisController.moveAxis(modelData.axis, modelData.dir, AxisController.MM)
@@ -901,11 +962,13 @@
         dialogStack.popupDialog(
                     "TextConfirm", {
                         name: "Limit Frame",
-                        titles: [qsTr("Home"), qsTr("Close")],
+                        type: TextConfirm.YES_NO_CANCEL,
+                        titles: [qsTr("Home"), qsTr("Ignore"), qsTr("Close")],
                         text: qsTr("Before any movement, please home all axes to find the boundary of build volume."),
                         onYes: function() {
                             axisController.moveCenter(PrintManager.currentTask.stage === PrintTask.PAUSED)
-                        }
+                        },
+                        onNo: function() {ignoreDialog = true},
                     })
 
     }
